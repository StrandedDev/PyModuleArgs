
	*****RUNNING ALL FUNCTIONS*****


	*****CLASSES*****

Class: Browser
Class: Config
Class: Connection
Class: ContraDict
Class: Element
Class: Tab

	*****FUNCTIONS*****

Function: loop
Function: start

	*****FUNCTIONS and ARGUMENTS*****

Function: loop, Arguments: 
Function: start, Arguments: config: 'Optional[Config]' = None, user_data_dir: 'Optional[PathLike]' = None, headless: 'Optional[bool]' = False, browser_executable_path: 'Optional[PathLike]' = None, browser_args: 'Optional[List[str]]' = None, sandbox: 'Optional[bool]' = True, lang: 'Optional[str]' = None, **kwargs: 'Optional[dict]'

	*****CLASSES and METHODS*****

Class: Browser, Method: __aenter__
Class: Browser, Method: __aexit__
Class: Browser, Method: __await__
Class: Browser, Method: __del__
Class: Browser, Method: __init__
Class: Browser, Method: __iter__
Class: Browser, Method: __next__
Class: Browser, Method: _get_targets
Class: Browser, Method: _handle_target_update
Class: Browser, Method: get
Class: Browser, Method: grant_all_permissions
Class: Browser, Method: sleep
Class: Browser, Method: start
Class: Browser, Method: stop
Class: Browser, Method: tile_windows
Class: Browser, Method: update_targets
Class: Browser, Method: wait
Class: Config, Method: __call__
Class: Config, Method: __getattr__
Class: Config, Method: __init__
Class: Config, Method: __repr__
Class: Config, Method: add_argument
Class: Config, Method: add_extension
Class: Connection, Method: __aenter__
Class: Connection, Method: __aexit__
Class: Connection, Method: __await__
Class: Connection, Method: __getattr__
Class: Connection, Method: __init__
Class: Connection, Method: _register_handlers
Class: Connection, Method: aclose
Class: Connection, Method: add_handler
Class: Connection, Method: aopen
Class: Connection, Method: send
Class: Connection, Method: sleep
Class: Connection, Method: update_target
Class: Connection, Method: wait
Class: ContraDict, Method: __dir__
Class: ContraDict, Method: __getattribute__
Class: ContraDict, Method: __init__
Class: ContraDict, Method: __setattr__
Class: ContraDict, Method: __setitem__
Class: Element, Method: __await__
Class: Element, Method: __call__
Class: Element, Method: __eq__
Class: Element, Method: __getattr__
Class: Element, Method: __getitem__
Class: Element, Method: __init__
Class: Element, Method: __repr__
Class: Element, Method: __setattr__
Class: Element, Method: __setitem__
Class: Element, Method: _make_attrs
Class: Element, Method: apply
Class: Element, Method: clear_input
Class: Element, Method: click
Class: Element, Method: flash
Class: Element, Method: focus
Class: Element, Method: get_html
Class: Element, Method: get_js_attributes
Class: Element, Method: get_position
Class: Element, Method: is_recording
Class: Element, Method: mouse_click
Class: Element, Method: mouse_move
Class: Element, Method: query_selector
Class: Element, Method: query_selector_all
Class: Element, Method: record_video
Class: Element, Method: remove_from_dom
Class: Element, Method: save_screenshot
Class: Element, Method: save_to_dom
Class: Element, Method: scroll_into_view
Class: Element, Method: select_option
Class: Element, Method: send_file
Class: Element, Method: send_keys
Class: Element, Method: set_text
Class: Element, Method: set_value
Class: Element, Method: update
Class: Tab, Method: __aenter__
Class: Tab, Method: __aexit__
Class: Tab, Method: __await__
Class: Tab, Method: __call__
Class: Tab, Method: __eq__
Class: Tab, Method: __getattr__
Class: Tab, Method: __init__
Class: Tab, Method: __repr__
Class: Tab, Method: _register_handlers
Class: Tab, Method: aclose
Class: Tab, Method: activate
Class: Tab, Method: add_handler
Class: Tab, Method: aopen
Class: Tab, Method: back
Class: Tab, Method: bring_to_front
Class: Tab, Method: close
Class: Tab, Method: download_file
Class: Tab, Method: evaluate
Class: Tab, Method: find
Class: Tab, Method: find_all
Class: Tab, Method: find_element_by_text
Class: Tab, Method: find_elements_by_text
Class: Tab, Method: forward
Class: Tab, Method: fullscreen
Class: Tab, Method: get
Class: Tab, Method: get_all_linked_sources
Class: Tab, Method: get_all_urls
Class: Tab, Method: get_content
Class: Tab, Method: get_window
Class: Tab, Method: inspector_open
Class: Tab, Method: js_dumps
Class: Tab, Method: maximize
Class: Tab, Method: medimize
Class: Tab, Method: minimize
Class: Tab, Method: open_external_inspector
Class: Tab, Method: query_selector
Class: Tab, Method: query_selector_all
Class: Tab, Method: reload
Class: Tab, Method: save_screenshot
Class: Tab, Method: scroll_down
Class: Tab, Method: scroll_up
Class: Tab, Method: select
Class: Tab, Method: select_all
Class: Tab, Method: send
Class: Tab, Method: set_download_path
Class: Tab, Method: set_window_size
Class: Tab, Method: set_window_state
Class: Tab, Method: sleep
Class: Tab, Method: update_target
Class: Tab, Method: verify_cf
Class: Tab, Method: wait
Class: Tab, Method: wait_for

	*****FUNCTIONS, METHODS and ARGUMENTS*****

Class: Browser, Method: __aenter__, Arguments: self
Class: Browser, Method: __aexit__, Arguments: self, exc_type, exc_val, exc_tb
Class: Browser, Method: __await__, Arguments: self
Class: Browser, Method: __del__, Arguments: self
Class: Browser, Method: __init__, Arguments: self, config: 'Config', **kwargs
Class: Browser, Method: __iter__, Arguments: self
Class: Browser, Method: __next__, Arguments: self
Class: Browser, Method: _get_targets, Arguments: self
Class: Browser, Method: _handle_target_update, Arguments: self, event: 'Union[cdp.target.TargetInfoChanged, cdp.target.TargetDestroyed, cdp.target.TargetCreated, cdp.target.TargetCrashed]'
Class: Browser, Method: get, Arguments: self, url='chrome://welcome', new_tab: 'bool' = False, new_window: 'bool' = False
Class: Browser, Method: grant_all_permissions, Arguments: self
Class: Browser, Method: sleep, Arguments: self, time: 'Union[float, int]' = 1
Class: Browser, Method: start, Arguments: self=None
Class: Browser, Method: stop, Arguments: self
Class: Browser, Method: tile_windows, Arguments: self, windows=None, max_columns: 'int' = 0
Class: Browser, Method: update_targets, Arguments: self
Class: Browser, Method: wait, Arguments: self, time: 'Union[float, int]' = 1
Class: Config, Method: __call__, Arguments: self
Class: Config, Method: __getattr__, Arguments: self, item
Class: Config, Method: __init__, Arguments: self, user_data_dir: Union[str, pathlib.Path, NoneType] = None, headless: Optional[bool] = False, browser_executable_path: Union[str, pathlib.Path, NoneType] = None, browser_args: Optional[List[str]] = None, sandbox: Optional[bool] = True, lang: Optional[str] = 'en-US', **kwargs: dict
Class: Config, Method: __repr__, Arguments: self
Class: Config, Method: add_argument, Arguments: self, arg: str
Class: Config, Method: add_extension, Arguments: self, extension_path: Union[str, pathlib.Path]
Class: Connection, Method: __aenter__, Arguments: self
Class: Connection, Method: __aexit__, Arguments: self, exc_type, exc_val, exc_tb
Class: Connection, Method: __await__, Arguments: self
Class: Connection, Method: __getattr__, Arguments: self, item
Class: Connection, Method: __init__, Arguments: self, websocket_url: 'str', target: 'cdp.target.TargetInfo' = None, _owner: "'Browser'" = None, **kwargs
Class: Connection, Method: _register_handlers, Arguments: self
Class: Connection, Method: aclose, Arguments: self
Class: Connection, Method: add_handler, Arguments: self, event_type_or_domain: 'Union[type, types.ModuleType]', handler: 'Union[Callable, Awaitable]'
Class: Connection, Method: aopen, Arguments: self, **kw
Class: Connection, Method: send, Arguments: self, cdp_obj: 'Generator[dict[str, Any], dict[str, Any], Any]', _is_update=False
Class: Connection, Method: sleep, Arguments: self, t: 'Union[int, float]' = 0.25
Class: Connection, Method: update_target, Arguments: self
Class: Connection, Method: wait, Arguments: self, t: 'Union[int, float]' = None
Class: ContraDict, Method: __dir__, Arguments: self
Class: ContraDict, Method: __getattribute__, Arguments: self, attribute
Class: ContraDict, Method: __init__, Arguments: self, *args, **kwargs
Class: ContraDict, Method: __setattr__, Arguments: self, key, value
Class: ContraDict, Method: __setitem__, Arguments: self, key, value
Class: Element, Method: __await__, Arguments: self
Class: Element, Method: __call__, Arguments: self, js_method
Class: Element, Method: __eq__, Arguments: self, other: 'Element'
Class: Element, Method: __getattr__, Arguments: self, item
Class: Element, Method: __getitem__, Arguments: self, item
Class: Element, Method: __init__, Arguments: self, node: 'cdp.dom.Node', tab: 'Tab', tree: 'cdp.dom.Node' = None
Class: Element, Method: __repr__, Arguments: self
Class: Element, Method: __setattr__, Arguments: self, key, value
Class: Element, Method: __setitem__, Arguments: self, key, value
Class: Element, Method: _make_attrs, Arguments: self
Class: Element, Method: apply, Arguments: self, js_function, return_by_value=True
Class: Element, Method: clear_input, Arguments: self, _until_event: 'type' = None
Class: Element, Method: click, Arguments: self
Class: Element, Method: flash, Arguments: self, duration: 'typing.Union[float, int]' = 0.5
Class: Element, Method: focus, Arguments: self
Class: Element, Method: get_html, Arguments: self
Class: Element, Method: get_js_attributes, Arguments: self
Class: Element, Method: get_position, Arguments: self, abs=False
Class: Element, Method: is_recording, Arguments: self
Class: Element, Method: mouse_click, Arguments: self, button: 'str' = 'left', buttons: 'typing.Optional[int]' = 1, modifiers: 'typing.Optional[int]' = 0, _until_event: 'typing.Optional[type]' = None
Class: Element, Method: mouse_move, Arguments: self
Class: Element, Method: query_selector, Arguments: self, selector
Class: Element, Method: query_selector_all, Arguments: self, selector: 'str'
Class: Element, Method: record_video, Arguments: self, filename: 'typing.Optional[str]' = None, folder: 'typing.Optional[str]' = None, duration: 'typing.Optional[typing.Union[int, float]]' = None
Class: Element, Method: remove_from_dom, Arguments: self
Class: Element, Method: save_screenshot, Arguments: self, filename: 'typing.Optional[PathLike]' = 'auto', format: 'typing.Optional[str]' = 'jpeg', scale: 'typing.Optional[typing.Union[int, float]]' = 1
Class: Element, Method: save_to_dom, Arguments: self
Class: Element, Method: scroll_into_view, Arguments: self
Class: Element, Method: select_option, Arguments: self
Class: Element, Method: send_file, Arguments: self, *file_paths: 'PathLike'
Class: Element, Method: send_keys, Arguments: self, text: 'str'
Class: Element, Method: set_text, Arguments: self, value
Class: Element, Method: set_value, Arguments: self, value
Class: Element, Method: update, Arguments: self, _node=None
Class: Tab, Method: __aenter__, Arguments: self
Class: Tab, Method: __aexit__, Arguments: self, exc_type, exc_val, exc_tb
Class: Tab, Method: __await__, Arguments: self
Class: Tab, Method: __call__, Arguments: self, text: 'Optional[str]' = '', selector: 'Optional[str]' = '', timeout: 'Optional[Union[int, float]]' = 10
Class: Tab, Method: __eq__, Arguments: self, other: 'Tab'
Class: Tab, Method: __getattr__, Arguments: self, item
Class: Tab, Method: __init__, Arguments: self, websocket_url: 'str', target: 'cdp.target.TargetInfo', browser: "Optional['nodriver.Browser']" = None, **kwargs
Class: Tab, Method: __repr__, Arguments: self
Class: Tab, Method: _register_handlers, Arguments: self
Class: Tab, Method: aclose, Arguments: self
Class: Tab, Method: activate, Arguments: self
Class: Tab, Method: add_handler, Arguments: self, event_type_or_domain: 'Union[type, types.ModuleType]', handler: 'Union[Callable, Awaitable]'
Class: Tab, Method: aopen, Arguments: self, **kw
Class: Tab, Method: back, Arguments: self
Class: Tab, Method: bring_to_front, Arguments: self
Class: Tab, Method: close, Arguments: self
Class: Tab, Method: download_file, Arguments: self, url: 'str', filename: 'Optional[PathLike]' = None
Class: Tab, Method: evaluate, Arguments: self, expression: 'str', await_promise=False, return_by_value=True
Class: Tab, Method: find, Arguments: self, text: 'str', best_match: 'bool' = True, return_enclosing_element=True, timeout: 'Union[int, float]' = 10
Class: Tab, Method: find_all, Arguments: self, text: 'str', timeout: 'Union[int, float]' = 10
Class: Tab, Method: find_element_by_text, Arguments: self, text: 'str', best_match: 'Optional[bool]' = False, return_enclosing_element: 'Optional[bool]' = True
Class: Tab, Method: find_elements_by_text, Arguments: self, text: 'str', tag_hint: 'Optional[str]' = None
Class: Tab, Method: forward, Arguments: self
Class: Tab, Method: fullscreen, Arguments: self
Class: Tab, Method: get, Arguments: self, url='chrome://welcome', new_tab: 'bool' = False, new_window: 'bool' = False
Class: Tab, Method: get_all_linked_sources, Arguments: self
Class: Tab, Method: get_all_urls, Arguments: self, absolute=True
Class: Tab, Method: get_content, Arguments: self
Class: Tab, Method: get_window, Arguments: self
Class: Tab, Method: inspector_open, Arguments: self
Class: Tab, Method: js_dumps, Arguments: self, obj_name: 'str', return_by_value: 'Optional[bool]' = True
Class: Tab, Method: maximize, Arguments: self
Class: Tab, Method: medimize, Arguments: self
Class: Tab, Method: minimize, Arguments: self
Class: Tab, Method: open_external_inspector, Arguments: self
Class: Tab, Method: query_selector, Arguments: self, selector: 'str', _node: 'Optional[Union[cdp.dom.Node, element.Element]]' = None
Class: Tab, Method: query_selector_all, Arguments: self, selector: 'str', _node: "Optional[Union[cdp.dom.Node, 'element.Element']]" = None
Class: Tab, Method: reload, Arguments: self, ignore_cache: 'Optional[bool]' = True, script_to_evaluate_on_load: 'Optional[str]' = None
Class: Tab, Method: save_screenshot, Arguments: self, filename: 'Optional[PathLike]' = 'auto', format: 'Optional[str]' = 'jpeg', full_page: 'Optional[bool]' = False
Class: Tab, Method: scroll_down, Arguments: self, amount=25
Class: Tab, Method: scroll_up, Arguments: self, amount=25
Class: Tab, Method: select, Arguments: self, selector: 'str', timeout: 'Union[int, float]' = 10
Class: Tab, Method: select_all, Arguments: self, selector: 'str', timeout: 'Union[int, float]' = 10
Class: Tab, Method: send, Arguments: self, cdp_obj: 'Generator[dict[str, Any], dict[str, Any], Any]', _is_update=False
Class: Tab, Method: set_download_path, Arguments: self, path: 'PathLike'
Class: Tab, Method: set_window_size, Arguments: self, left=0, top=0, width=1280, height=1024
Class: Tab, Method: set_window_state, Arguments: self, left=0, top=0, width=1280, height=720, state='normal'
Class: Tab, Method: sleep, Arguments: self, t: 'Union[int, float]' = 0.25
Class: Tab, Method: update_target, Arguments: self
Class: Tab, Method: verify_cf, Arguments: self
Class: Tab, Method: wait, Arguments: self, t: 'Union[int, float]' = None
Class: Tab, Method: wait_for, Arguments: self, selector: 'Optional[str]' = '', text: 'Optional[str]' = '', timeout: 'Optional[Union[int, float]]' = 10
